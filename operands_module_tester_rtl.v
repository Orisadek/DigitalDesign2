//
// Test Bench Module Ori_Alon_Lab_1_lib.operands_module_tester.operands_module_tester
//
// Created:
//          by - orisad.UNKNOWN (TOMER)
//          at - 15:31:14 02/ 2/2024
//
// Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
//
`resetall
`timescale 1ns/10ps
module operands_module_tester (clk_i,
                               rst_ni,
                               write_enable_i,
                               address_i,
                               write_data_i,
                               read_data_o
                              );

// Local declarations

parameter DATA_WIDTH = 32;
parameter BUS_WIDTH = 64;
parameter ADDR_WIDTH = 32;
localparam MAX_DIM = (BUS_WIDTH / DATA_WIDTH);


output clk_i;
output rst_ni;
output write_enable_i;
output address_i;
output write_data_i;
input  read_data_o;

reg  clk_i;
reg  rst_ni;
reg  write_enable_i;
reg  [ADDR_WIDTH-1:0] address_i; // adress of writing (for line/col)
reg  [BUS_WIDTH-1:0] write_data_i; //the data we ant to write
wire [BUS_WIDTH-1:0] read_data_o; // the data we read (line/col)
reg [DATA_WIDTH-1:0] val_a1,val_a2,val_a3,val_a4;

initial begin: setup_clk
  clk_i = 1'b0;
  forever #1 clk_i = ~clk_i;
end

initial begin: setup_rst
  rst_ni = 1'b0;
  #10 rst_ni = 1'b1;
end

task do_write;
  input [ADDR_WIDTH-1:0] addr_write;
  input [BUS_WIDTH-1:0] data_write;
    begin
      address_i = addr_write;
      write_data_i = data_write;
      write_enable_i = 1'b1;
      #2;
      write_enable_i = 1'b0;
    end
endtask
    
initial begin: setup_matrices
	val_a1=2;
	val_a2=3;
	val_a3=4;
	val_a4=5;
end

task do_read;
    input [ADDR_WIDTH-1:0] addr_write;
    begin
	  write_enable_i = 1'b0;
      address_i = addr_write; 
	  #1;
    end
endtask    
    
    
initial begin
	wait (rst_ni == 1'b1);
    do_write(1,{val_a1,val_a2});
    #1;
	do_write(0,{val_a3,val_a4});
	#2;
    do_read(1);
	#2;
	do_read(0);
end   
    
		

endmodule // operands_module_tester


